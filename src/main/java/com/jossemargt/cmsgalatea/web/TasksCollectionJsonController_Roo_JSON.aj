// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.jossemargt.cmsgalatea.web;

import com.jossemargt.cmsgalatea.model.Task;
import com.jossemargt.cmsgalatea.service.api.TaskService;
import com.jossemargt.cmsgalatea.web.TasksCollectionJsonController;
import io.springlets.data.domain.GlobalSearch;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect TasksCollectionJsonController_Roo_JSON {
    
    declare @type: TasksCollectionJsonController: @RestController;
    
    declare @type: TasksCollectionJsonController: @RequestMapping(value = "/galatea/v1/tasks", name = "TasksCollectionJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private TaskService TasksCollectionJsonController.taskService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param taskService
     */
    @Autowired
    public TasksCollectionJsonController.new(TaskService taskService) {
        this.taskService = taskService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return TaskService
     */
    public TaskService TasksCollectionJsonController.getTaskService() {
        return taskService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param taskService
     */
    public void TasksCollectionJsonController.setTaskService(TaskService taskService) {
        this.taskService = taskService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return ResponseEntity
     */
    @GetMapping(name = "list")
    public ResponseEntity<Page<Task>> TasksCollectionJsonController.list(GlobalSearch globalSearch, Pageable pageable) {
        
        Page<Task> tasks = getTaskService().findAll(globalSearch, pageable);
        return ResponseEntity.ok(tasks);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return UriComponents
     */
    public static UriComponents TasksCollectionJsonController.listURI() {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(TasksCollectionJsonController.class).list(null, null))
            .build().encode();
    }
    
}
