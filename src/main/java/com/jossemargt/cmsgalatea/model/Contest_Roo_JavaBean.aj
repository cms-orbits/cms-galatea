// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.jossemargt.cmsgalatea.model;

import com.jossemargt.cmsgalatea.model.Contest;
import com.jossemargt.cmsgalatea.model.Task;
import com.jossemargt.cmsgalatea.model.TokenMode;
import java.time.Instant;
import java.time.LocalTime;
import java.util.Objects;
import java.util.Set;

privileged aspect Contest_Roo_JavaBean {
    
    /**
     * Gets id value
     * 
     * @return Long
     */
    public Long Contest.getId() {
        return this.id;
    }
    
    /**
     * Gets version value
     * 
     * @return Integer
     */
    public Integer Contest.getVersion() {
        return this.version;
    }
    
    /**
     * Gets name value
     * 
     * @return String
     */
    public String Contest.getName() {
        return this.name;
    }
    
    /**
     * Gets description value
     * 
     * @return String
     */
    public String Contest.getDescription() {
        return this.description;
    }
    
    /**
     * Gets allowedLocalizations value
     * 
     * @return String
     */
    public String Contest.getAllowedLocalizations() {
        return this.allowedLocalizations;
    }
    
    /**
     * Gets languages value
     * 
     * @return String
     */
    public String Contest.getLanguages() {
        return this.languages;
    }
    
    /**
     * Gets submissionsDownloadAllowed value
     * 
     * @return Boolean
     */
    public Boolean Contest.getSubmissionsDownloadAllowed() {
        return this.submissionsDownloadAllowed;
    }
    
    /**
     * Gets allowQuestions value
     * 
     * @return Boolean
     */
    public Boolean Contest.getAllowQuestions() {
        return this.allowQuestions;
    }
    
    /**
     * Gets allowUserTests value
     * 
     * @return Boolean
     */
    public Boolean Contest.getAllowUserTests() {
        return this.allowUserTests;
    }
    
    /**
     * Gets blockHiddenParticipations value
     * 
     * @return Boolean
     */
    public Boolean Contest.getBlockHiddenParticipations() {
        return this.blockHiddenParticipations;
    }
    
    /**
     * Gets allowPasswordAuthentication value
     * 
     * @return Boolean
     */
    public Boolean Contest.getAllowPasswordAuthentication() {
        return this.allowPasswordAuthentication;
    }
    
    /**
     * Gets ipRestriction value
     * 
     * @return Boolean
     */
    public Boolean Contest.getIpRestriction() {
        return this.ipRestriction;
    }
    
    /**
     * Gets ipAutologin value
     * 
     * @return Boolean
     */
    public Boolean Contest.getIpAutologin() {
        return this.ipAutologin;
    }
    
    /**
     * Gets tokenMode value
     * 
     * @return TokenMode
     */
    public TokenMode Contest.getTokenMode() {
        return this.tokenMode;
    }
    
    /**
     * Gets tokenMaxNumber value
     * 
     * @return Integer
     */
    public Integer Contest.getTokenMaxNumber() {
        return this.tokenMaxNumber;
    }
    
    /**
     * Gets tokenMinInterval value
     * 
     * @return LocalTime
     */
    public LocalTime Contest.getTokenMinInterval() {
        return this.tokenMinInterval;
    }
    
    /**
     * Gets tokenGenInitial value
     * 
     * @return Integer
     */
    public Integer Contest.getTokenGenInitial() {
        return this.tokenGenInitial;
    }
    
    /**
     * Gets tokenGenNumber value
     * 
     * @return Integer
     */
    public Integer Contest.getTokenGenNumber() {
        return this.tokenGenNumber;
    }
    
    /**
     * Gets tokenGenMax value
     * 
     * @return Integer
     */
    public Integer Contest.getTokenGenMax() {
        return this.tokenGenMax;
    }
    
    /**
     * Gets tokenGenInterval value
     * 
     * @return LocalTime
     */
    public LocalTime Contest.getTokenGenInterval() {
        return this.tokenGenInterval;
    }
    
    /**
     * Gets startTime value
     * 
     * @return Instant
     */
    public Instant Contest.getStartTime() {
        return this.startTime;
    }
    
    /**
     * Gets stopTime value
     * 
     * @return Instant
     */
    public Instant Contest.getStopTime() {
        return this.stopTime;
    }
    
    /**
     * Gets analysisEnabled value
     * 
     * @return Boolean
     */
    public Boolean Contest.getAnalysisEnabled() {
        return this.analysisEnabled;
    }
    
    /**
     * Gets analysisStart value
     * 
     * @return Instant
     */
    public Instant Contest.getAnalysisStart() {
        return this.analysisStart;
    }
    
    /**
     * Gets analysisStop value
     * 
     * @return Instant
     */
    public Instant Contest.getAnalysisStop() {
        return this.analysisStop;
    }
    
    /**
     * Gets maxSubmissionNumber value
     * 
     * @return Integer
     */
    public Integer Contest.getMaxSubmissionNumber() {
        return this.maxSubmissionNumber;
    }
    
    /**
     * Gets maxUserTestNumber value
     * 
     * @return Integer
     */
    public Integer Contest.getMaxUserTestNumber() {
        return this.maxUserTestNumber;
    }
    
    /**
     * Gets minSubmissionInterval value
     * 
     * @return LocalTime
     */
    public LocalTime Contest.getMinSubmissionInterval() {
        return this.minSubmissionInterval;
    }
    
    /**
     * Gets minUserTestInterval value
     * 
     * @return LocalTime
     */
    public LocalTime Contest.getMinUserTestInterval() {
        return this.minUserTestInterval;
    }
    
    /**
     * Gets scorePrecision value
     * 
     * @return Integer
     */
    public Integer Contest.getScorePrecision() {
        return this.scorePrecision;
    }
    
    /**
     * Gets tasks value
     * 
     * @return Set
     */
    public Set<Task> Contest.getTasks() {
        return this.tasks;
    }
    
    /**
     * This `equals` implementation is specific for JPA entities and uses 
     * the entity identifier for it, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @param obj
     * @return Boolean
     */
    public boolean Contest.equals(Object obj) {
        if (this == obj) {
            return true;
        }
        // instanceof is false if the instance is null
        if (!(obj instanceof Contest)) {
            return false;
        }
        return getId() != null && Objects.equals(getId(), ((Contest) obj).getId());
    }
    
    /**
     * This `hashCode` implementation is specific for JPA entities and uses a fixed `int` value to be able 
     * to identify the entity in collections after a new id is assigned to the entity, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @return Integer
     */
    public int Contest.hashCode() {
        return 31;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String Contest.toString() {
        return "Contest {" + 
                "id='" + id + '\'' + 
                ", version='" + version + '\'' + 
                ", name='" + name + '\'' + 
                ", description='" + description + '\'' + 
                ", allowedLocalizations='" + allowedLocalizations + '\'' + 
                ", languages='" + languages + '\'' + 
                ", submissionsDownloadAllowed='" + submissionsDownloadAllowed + '\'' + 
                ", allowQuestions='" + allowQuestions + '\'' + 
                ", allowUserTests='" + allowUserTests + '\'' + 
                ", blockHiddenParticipations='" + blockHiddenParticipations + '\'' + 
                ", allowPasswordAuthentication='" + allowPasswordAuthentication + '\'' + 
                ", ipRestriction='" + ipRestriction + '\'' + 
                ", ipAutologin='" + ipAutologin + '\'' + 
                ", tokenMaxNumber='" + tokenMaxNumber + '\'' + 
                ", tokenGenInitial='" + tokenGenInitial + '\'' + 
                ", tokenGenNumber='" + tokenGenNumber + '\'' + 
                ", tokenGenMax='" + tokenGenMax + '\'' + 
                ", analysisEnabled='" + analysisEnabled + '\'' + 
                ", maxSubmissionNumber='" + maxSubmissionNumber + '\'' + 
                ", maxUserTestNumber='" + maxUserTestNumber + '\'' + 
                ", scorePrecision='" + scorePrecision + '\'' + "}" + super.toString();
    }
    
}
