// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.jossemargt.cmsgalatea.model;

import com.jossemargt.cmsgalatea.model.Dataset;
import com.jossemargt.cmsgalatea.model.ExecutionScenario;
import com.jossemargt.cmsgalatea.model.Task;
import java.util.List;
import java.util.Objects;

privileged aspect Dataset_Roo_JavaBean {
    
    /**
     * Gets id value
     * 
     * @return Long
     */
    public Long Dataset.getId() {
        return this.id;
    }
    
    /**
     * Gets version value
     * 
     * @return Integer
     */
    public Integer Dataset.getVersion() {
        return this.version;
    }
    
    /**
     * Gets description value
     * 
     * @return String
     */
    public String Dataset.getDescription() {
        return this.description;
    }
    
    /**
     * Gets autojudge value
     * 
     * @return Boolean
     */
    public Boolean Dataset.getAutojudge() {
        return this.autojudge;
    }
    
    /**
     * Gets timeLimit value
     * 
     * @return Float
     */
    public Float Dataset.getTimeLimit() {
        return this.timeLimit;
    }
    
    /**
     * Gets memoryLimit value
     * 
     * @return Float
     */
    public Float Dataset.getMemoryLimit() {
        return this.memoryLimit;
    }
    
    /**
     * Gets taskType value
     * 
     * @return String
     */
    public String Dataset.getTaskType() {
        return this.taskType;
    }
    
    /**
     * Gets taskTypeParameters value
     * 
     * @return String
     */
    public String Dataset.getTaskTypeParameters() {
        return this.taskTypeParameters;
    }
    
    /**
     * Gets scoreType value
     * 
     * @return String
     */
    public String Dataset.getScoreType() {
        return this.scoreType;
    }
    
    /**
     * Gets scoreTypeParameters value
     * 
     * @return String
     */
    public String Dataset.getScoreTypeParameters() {
        return this.scoreTypeParameters;
    }
    
    /**
     * Gets task value
     * 
     * @return Task
     */
    public Task Dataset.getTask() {
        return this.task;
    }
    
    /**
     * Gets tasks value
     * 
     * @return List
     */
    public List<ExecutionScenario> Dataset.getTasks() {
        return this.tasks;
    }
    
    /**
     * This `equals` implementation is specific for JPA entities and uses 
     * the entity identifier for it, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @param obj
     * @return Boolean
     */
    public boolean Dataset.equals(Object obj) {
        if (this == obj) {
            return true;
        }
        // instanceof is false if the instance is null
        if (!(obj instanceof Dataset)) {
            return false;
        }
        return getId() != null && Objects.equals(getId(), ((Dataset) obj).getId());
    }
    
    /**
     * This `hashCode` implementation is specific for JPA entities and uses a fixed `int` value to be able 
     * to identify the entity in collections after a new id is assigned to the entity, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @return Integer
     */
    public int Dataset.hashCode() {
        return 31;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String Dataset.toString() {
        return "Dataset {" + 
                "id='" + id + '\'' + 
                ", version='" + version + '\'' + 
                ", description='" + description + '\'' + 
                ", autojudge='" + autojudge + '\'' + 
                ", timeLimit='" + timeLimit + '\'' + 
                ", memoryLimit='" + memoryLimit + '\'' + 
                ", taskType='" + taskType + '\'' + 
                ", taskTypeParameters='" + taskTypeParameters + '\'' + 
                ", scoreType='" + scoreType + '\'' + 
                ", scoreTypeParameters='" + scoreTypeParameters + '\'' + "}" + super.toString();
    }
    
}
