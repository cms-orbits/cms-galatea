// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.jossemargt.cmsgalatea.model;

import com.jossemargt.cmsgalatea.model.Attachment;
import com.jossemargt.cmsgalatea.model.Contest;
import com.jossemargt.cmsgalatea.model.Dataset;
import com.jossemargt.cmsgalatea.model.ScoreMode;
import com.jossemargt.cmsgalatea.model.Statement;
import com.jossemargt.cmsgalatea.model.SubmissionFormatElement;
import com.jossemargt.cmsgalatea.model.Task;
import com.jossemargt.cmsgalatea.model.TokenMode;
import java.time.LocalTime;
import java.util.List;
import java.util.Objects;

privileged aspect Task_Roo_JavaBean {
    
    /**
     * Gets id value
     * 
     * @return Long
     */
    public Long Task.getId() {
        return this.id;
    }
    
    /**
     * Gets version value
     * 
     * @return Integer
     */
    public Integer Task.getVersion() {
        return this.version;
    }
    
    /**
     * Gets num value
     * 
     * @return Integer
     */
    public Integer Task.getNum() {
        return this.num;
    }
    
    /**
     * Gets name value
     * 
     * @return String
     */
    public String Task.getName() {
        return this.name;
    }
    
    /**
     * Gets title value
     * 
     * @return String
     */
    public String Task.getTitle() {
        return this.title;
    }
    
    /**
     * Gets primaryStatements value
     * 
     * @return String
     */
    public String Task.getPrimaryStatements() {
        return this.primaryStatements;
    }
    
    /**
     * Gets tokenMode value
     * 
     * @return TokenMode
     */
    public TokenMode Task.getTokenMode() {
        return this.tokenMode;
    }
    
    /**
     * Gets tokenMaxNumber value
     * 
     * @return Integer
     */
    public Integer Task.getTokenMaxNumber() {
        return this.tokenMaxNumber;
    }
    
    /**
     * Gets tokenMinInterval value
     * 
     * @return LocalTime
     */
    public LocalTime Task.getTokenMinInterval() {
        return this.tokenMinInterval;
    }
    
    /**
     * Gets tokenGenInitial value
     * 
     * @return Integer
     */
    public Integer Task.getTokenGenInitial() {
        return this.tokenGenInitial;
    }
    
    /**
     * Gets tokenGenNumber value
     * 
     * @return Integer
     */
    public Integer Task.getTokenGenNumber() {
        return this.tokenGenNumber;
    }
    
    /**
     * Gets tokenGenMax value
     * 
     * @return Integer
     */
    public Integer Task.getTokenGenMax() {
        return this.tokenGenMax;
    }
    
    /**
     * Gets tokenGenInterval value
     * 
     * @return LocalTime
     */
    public LocalTime Task.getTokenGenInterval() {
        return this.tokenGenInterval;
    }
    
    /**
     * Gets maxSubmissionNumber value
     * 
     * @return Integer
     */
    public Integer Task.getMaxSubmissionNumber() {
        return this.maxSubmissionNumber;
    }
    
    /**
     * Gets maxUserTestNumber value
     * 
     * @return Integer
     */
    public Integer Task.getMaxUserTestNumber() {
        return this.maxUserTestNumber;
    }
    
    /**
     * Gets minSubmissionInterval value
     * 
     * @return LocalTime
     */
    public LocalTime Task.getMinSubmissionInterval() {
        return this.minSubmissionInterval;
    }
    
    /**
     * Gets minUserTestInterval value
     * 
     * @return LocalTime
     */
    public LocalTime Task.getMinUserTestInterval() {
        return this.minUserTestInterval;
    }
    
    /**
     * Gets scorePrecision value
     * 
     * @return Integer
     */
    public Integer Task.getScorePrecision() {
        return this.scorePrecision;
    }
    
    /**
     * Gets scoreMode value
     * 
     * @return ScoreMode
     */
    public ScoreMode Task.getScoreMode() {
        return this.scoreMode;
    }
    
    /**
     * Gets contest value
     * 
     * @return Contest
     */
    public Contest Task.getContest() {
        return this.contest;
    }
    
    /**
     * Gets activeDataset value
     * 
     * @return Dataset
     */
    public Dataset Task.getActiveDataset() {
        return this.activeDataset;
    }
    
    /**
     * Gets submissionFileFormats value
     * 
     * @return List
     */
    public List<SubmissionFormatElement> Task.getSubmissionFileFormats() {
        return this.submissionFileFormats;
    }
    
    /**
     * Gets statements value
     * 
     * @return List
     */
    public List<Statement> Task.getStatements() {
        return this.statements;
    }
    
    /**
     * Gets attachments value
     * 
     * @return List
     */
    public List<Attachment> Task.getAttachments() {
        return this.attachments;
    }
    
    /**
     * This `equals` implementation is specific for JPA entities and uses 
     * the entity identifier for it, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @param obj
     * @return Boolean
     */
    public boolean Task.equals(Object obj) {
        if (this == obj) {
            return true;
        }
        // instanceof is false if the instance is null
        if (!(obj instanceof Task)) {
            return false;
        }
        return getId() != null && Objects.equals(getId(), ((Task) obj).getId());
    }
    
    /**
     * This `hashCode` implementation is specific for JPA entities and uses a fixed `int` value to be able 
     * to identify the entity in collections after a new id is assigned to the entity, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @return Integer
     */
    public int Task.hashCode() {
        return 31;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String Task.toString() {
        return "Task {" + 
                "id='" + id + '\'' + 
                ", version='" + version + '\'' + 
                ", num='" + num + '\'' + 
                ", name='" + name + '\'' + 
                ", title='" + title + '\'' + 
                ", primaryStatements='" + primaryStatements + '\'' + 
                ", tokenMaxNumber='" + tokenMaxNumber + '\'' + 
                ", tokenGenInitial='" + tokenGenInitial + '\'' + 
                ", tokenGenNumber='" + tokenGenNumber + '\'' + 
                ", tokenGenMax='" + tokenGenMax + '\'' + 
                ", maxSubmissionNumber='" + maxSubmissionNumber + '\'' + 
                ", maxUserTestNumber='" + maxUserTestNumber + '\'' + 
                ", scorePrecision='" + scorePrecision + '\'' + "}" + super.toString();
    }
    
}
